{
    "collab_server" : "",
    "contents" : "library(autoBagging)\n\ndata(sysdata, envir=environment())\nsysdata$autoBaggingClassificationGSI$measures <- c(sysdata$autoBaggingClassificationGSI$measures, \"class.rel.freq\")\nsysdata$metafeatures_names\n\nwhich(sysdata$autoBaggingClassificationGSI$measures == \"n.examples\")\nsysdata$autoBaggingClassificationGSI$measures <- sysdata$autoBaggingClassificationGSI$measures[-3]\nany(sysdata$autoBaggingClassificationGSI$measures %in% \"symb.value.freq\")\nsysdata$kCompleteClassificationGSI$measures\n\nsysdata$autoBaggingClassificationGSI$measures <- c(\"n.examples\",\n                                                   \"n.continuous.attrs\",\n                                                   \"n.symbolic.attrs\",\n                                                   \"n.examples.rel.n.attrs\",\n                                                   \"symb.pair.value.freq\",\n                                                   \"class.abs.freq\",\n                                                   \"class.symb.value.freq\",\n                                                   sysdata$autoBaggingClassificationGSI$measures)\n\nsysdata$autoBaggingClassificationGSI$measures <- sysdata$autoBaggingClassificationGSI$measures[-c(1)]\nhist_attr.entropy\ncolnames(sysdata$Xtest)\nres.symb.pair.mutual.information\nsysdata$autoBaggingClassificationGSI$measures <-\n  c(sysdata$autoBaggingClassificationGSI$measures[1:30], \"symb.pair.mutual.information\",\n    sysdata$autoBaggingClassificationGSI$measures[31:length(sysdata$autoBaggingClassificationGSI$measures)])\n\nsysdata$kCompleteClassificationGSI$measures[which(!sysdata$kCompleteClassificationGSI$measures %in% sysdata$autoBaggingClassificationGSI$measures)]\n\n\ndevtools::use_data(sysdata, internal = T)\n\nlibrary(autoBagging)\nautoBagging(Species ~., iris)\n\n\nsysdata$autoBaggingClassificationGSI\nrm(list=ls())\n\n\n\n\nlibrary(microbenchmark)\nres <- microbenchmark(dstump.landmarker_d2(ext.iris, \"sasd\",10), newf(ext.iris, 10), times=10L)\n\n\ndevtools::load_all()\nfor (i in 1) iris <- rbind.data.frame(iris, iris)\ndim(iris)\ndata(iris)\n\nt0 <- Sys.time()\nm<-autoBagging(Species ~., iris)\nprint(Sys.time() - t0)\n\n\nwkDataSet <- dataset <- ReadDF(iris)\n\nwkDCSet <- list(value = list())\ndc.measures <- sysdata$kCompleteClassificationGSI\n\ntimes <- numeric(length(dc.measures$measures))\nfor (wkMeasure in dc.measures$measures) {\n  cat(wkMeasure, \"\\n\")\n  t0 <- Sys.time()\n  if (is.null(wkDCSet$value[[wkMeasure]])) {\n    wkValue <- do.call(wkMeasure, list(wkDataSet, wkDCSet))\n    wkDCSet$value[[wkMeasure]] <- wkValue\n  }\n  times[wkMeasure] <- Sys.time() - t0\n}\n\n\nk_overlap <- 7\ntheta_overlap <- 4\ndataset <- ReadDF(iris)\ndata_noclass <- dataset[[2]]$frame[, -ncol(dataset[[2]]$frame)]\nt0 <- Sys.time()\ndist_mat <- as.matrix(dist(data_noclass))\nSys.time() - t0\nt1 <- Sys.time()\no.dm <- apply(dist_mat, 1, order, partial = 1:nrow(dist_mat))\nSys.time() - t1\nt2 <- Sys.time()\nkOL.dm <- t(apply(o.dm, 1, function(o) o[2:(k_overlap + 1)]))\nSys.time() - t2\nCLASS <- as.character(dataset[[2]]$frame[, ncol(dataset[[2]]$frame)])\nt3 <- Sys.time()\nkOL.class <- t(apply(kOL.dm, 1, function(o) CLASS[o]))\nSys.time() - t3\nt4 <- Sys.time()\nkLOL.class <- vapply(seq_len(nrow(kOL.dm)), function(o) {\n  CLASS[kOL.dm[o, ]] != CLASS[o]\n}, logical(k_overlap))\nSys.time() - t4\nt5 <- Sys.time()\na<-colSums(kLOL.class) >= theta_overlap\nSys.time() - t5\n\nlibrary(data.table)\n\nsystem.time(o.dm <- apply(dist_mat, 1, order))\nsystem.time(o.dm2 <- apply(dist_mat, 1, order, partial = 1:ncol(dist_mat)))\n\n\nsystem.time(o.dm2 <- apply(as.data.table(dist_mat), FUN=order, MAR =1))\nsystem.time(o.dm <- apply(dist_mat, 1, order, method =\"shell\"))\nsystem.time(o.dm <- apply(dist_mat, 1, order, method =\"quick\"))\n\na<-dist_mat[1:5,1:5]\ncolnames(dist_mat)\na<-as.data.table(a)\n\nDT[,c('a1','a2'):=data.table(matrix(apply(DT[,paste0('V',1:10),with=FALSE],FUN=f,MAR=1),byrow=T,nrow=10))]\nDT\n\n\n\napply(a[,colnames(a),with=FALSE],FUN=order,MAR=1)\napply(a,FUN=order,MAR=1)\n\na[order(-rank())]\n\nDT[order(-rank(x), y)]\n\n\n?order\no.dm <- apply(dist_mat, 1, function(o) {\n  order(o, partial = 1:5)[1:5]\n})\n\na <- rnorm(10)\na\norder(a, method = \"radix\")\nsort(a, partial = 1:5)\n\noverlap1 <- function(dm) {\n  dist_mat <- as.matrix(dist_mat)\n\n  o.dm <- apply(dist_mat, 1, order)\n\n  kOL.dm <- t(apply(o.dm, 1, function(o) o[2:(k_overlap + 1)]))\n\n  CLASS <- as.character(dataset[[2]]$frame[,ncol(dataset[[2]]$frame)])\n\n  kOL.class <- t(apply(kOL.dm, 1, function(o) CLASS[o]))\n\n  kLOL.class <- vapply(seq_len(nrow(kOL.dm)), function(o) {\n    CLASS[kOL.dm[o, ]] != CLASS[o]\n  }, logical(7))\n\n  colSums(kLOL.class) >= 4\n}\n\n\nlibrary(microbenchmark)\nres <- microbenchmark(overlap1(dist_mat), overlap2(dist_mat2), times=1000L)\n\n",
    "created" : 1499243831496.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1637903116",
    "id" : "BDD339C1",
    "lastKnownWriteTime" : 1500452002,
    "last_content_update" : 1500452002661,
    "path" : "~/Dropbox/AutoFuckingBagging/package/autoBagging/testing.r",
    "project_path" : "testing.r",
    "properties" : {
        "source_window_id" : "w8ntv0el2qy0q",
        "tempName" : "Untitled1"
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}